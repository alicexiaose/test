import {
  Hct,
  hexFromArgb,
  argbFromHex,
  TonalPalette,
  Blend,
} from "@material/material-color-utilities";

// 定义 tone 梯度
const TONE_ARR = [0, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 94, 97, 100];

const createTonalPalette = (color, targetColor, isVariant) => {
  // 判断是否需要对颜色做 harmonize 处理
  const argb = targetColor
    ? Blend.harmonize(argbFromHex(color), argbFromHex(targetColor))
    : argbFromHex(color);

  // 将颜色转为 hct 格式
  const hct = Hct.fromInt(argb);

  // 创建 palette，其实从 fromHueAndChroma 方法可以窥探到 tonal palette 生成逻辑
  const palette = TonalPalette.fromHueAndChroma(
    hct.hue,
    isVariant ? Math.min(hct.chroma / 6, 8) : hct.chroma
  );

  // 在 palette 上取一组 tone 梯度对应的颜色数组
  const colorArr = TONE_ARR.map((t) => hexFromArgb(palette.tone(t)));

  // 生成 Figma tokens 插件可用的数据对象
  const tokensObj = Object.fromEntries(
    TONE_ARR.map((t, i) => [t, { value: colorArr[i], type: "color" }])
  );

  return { colorArr, tokensObj };
};
